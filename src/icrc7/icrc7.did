type Account = record { owner : principal; subaccount : opt blob };
type Icrc7TokenMetadata = record {
  metadata : vec record { text; MetadataValue };
};
type InitArg = record {
  icrc7_supply_cap : opt nat;
  icrc7_description : opt text;
  minting_auth : opt Account;
  icrc7_symbol : text;
  icrc7_logo : opt text;
  icrc7_name : text;
};
type MetadataValue = variant { Int : int; Nat : nat; Blob : blob; Text : text };
type MintArgs = record {
  owner : Account;
  logo : opt text;
  name : text;
  description : opt text;
};
type MintBatchArgs = record {
  owners : vec Account;
  logos : vec opt text;
  names : vec text;
  descriptions : vec opt text;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : nat; Err : text };
type Result_2 = variant { Ok : vec nat; Err : text };
type Result_3 = variant { Ok; Err : text };
type SetBaseUriArgs = record { uri : text };
type Standard = record { url : text; name : text };
type TransferArg = record {
  to : Account;
  token_id : nat;
  memo : opt blob;
  from_subaccount : opt blob;
  created_at_time : opt nat64;
};
service : (InitArg) -> {
  base_uri : () -> (Result) query;
  icrc10_supported_standards : () -> (vec Standard) query;
  icrc7_atomic_batch_transfer : () -> (opt bool) query;
  icrc7_balance_of : (vec Account) -> (vec nat) query;
  icrc7_default_take_value : () -> (opt nat) query;
  icrc7_description : () -> (opt text) query;
  icrc7_logo : () -> (opt text) query;
  icrc7_max_memo_size : () -> (opt nat) query;
  icrc7_max_query_batch_size : () -> (opt nat) query;
  icrc7_max_take_value : () -> (opt nat) query;
  icrc7_max_update_batch_size : () -> (opt nat) query;
  icrc7_name : () -> (opt text) query;
  icrc7_owner_of : (vec nat) -> (vec opt Account) query;
  icrc7_permitted_drift : () -> (opt nat) query;
  icrc7_supply_cap : () -> (opt nat) query;
  icrc7_symbol : () -> (opt text) query;
  icrc7_token_metadata : (vec nat) -> (vec opt Icrc7TokenMetadata) query;
  icrc7_total_supply : () -> (nat) query;
  icrc7_transfer : (Account, vec TransferArg) -> (vec Result_1);
  icrc7_tx_window : () -> (opt nat) query;
  mint : (MintArgs) -> (Result_1);
  mint_batch : (MintBatchArgs) -> (Result_2);
  set_base_uri : (SetBaseUriArgs) -> (Result_3);
  token_uri : (nat) -> (Result) query;
}
